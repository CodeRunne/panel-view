{"version":3,"file":"static/js/613.ebea8d6e.chunk.js","mappings":"kLAaA,I,EAAA,EAbA,SAAiC,GAAuB,IAArBA,EAAO,EAAPA,QAASC,EAAO,EAAPA,QAClCC,EAAS,CAAC,EAShB,OARAC,QAAQC,IAAIJ,EAASC,GAEjBD,EAAQK,SACRH,EAAOF,QAAU,2BAEjBC,EAAQI,SACRH,EAAOD,QAAU,0BAEdC,CACX,E,4BCRaI,E,QAAoBC,GAAAA,KAAW,4tB,SCqH5C,MAjHA,WACC,IAAuBC,GAAQC,EAAAA,EAAAA,YAAWC,EAAAA,GAAlCC,YAAeH,GACvB,GAA8BI,EAAAA,EAAAA,UAAS,IAAG,eAAnCZ,EAAO,KAAEa,EAAU,KAC1B,GAA8BD,EAAAA,EAAAA,UAAS,IAAG,eAAnCX,EAAO,KAAEa,EAAU,KAC1B,GAA4BF,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAAjCV,EAAM,KAAEa,EAAS,KACxB,GAA8CH,EAAAA,EAAAA,WAAS,GAAM,eAAtDI,EAAe,KAAEC,EAAkB,KAC1C,GAAsCL,EAAAA,EAAAA,WAAS,GAAM,eAA9CM,EAAW,KAAEC,EAAc,KAClC,GAAsCP,EAAAA,EAAAA,WAAS,GAAM,eAA9CQ,EAAW,KAAEC,EAAc,KA+BlC,OA7BAC,EAAAA,EAAAA,YAAU,WAOT,OALAH,GAAe,GAGfE,GAAe,GAER,WACNF,GAAe,GACfE,GAAe,EAChB,CACD,GAAG,CAACF,EAAgBE,KAWpBC,EAAAA,EAAAA,YAAU,WACyB,IAA/BC,OAAOC,KAAKtB,GAAQG,QAAgBW,GACtCb,QAAQC,IAAIJ,EAASC,EAASO,EAEhC,GAAG,CAACN,EAAQc,EAAiBhB,EAASC,EAASO,KAI9C,2BAEGY,GACD,UAAC,KAAK,CACLK,OAAQL,EACRM,UAAWL,EAAe,4HAEoF,iBAAMM,UAAU,YAAW,sCAChI,MAGX,SAAC,KAAK,CACLF,OAAQP,EACRU,WAAY,kBAAMT,GAAe,SAAAU,GAAS,OAAKA,CAAS,GAAC,EAAC,UAE1D,UAAC,KAAS,YAET,2BACC,oEAA0C,iBAAMF,UAAU,0BAAyB,uBAEnF,sEAA4C,iBAAMA,UAAU,0BAAyB,yBAErF,0FAAgE,iBAAMA,UAAU,0BAAyB,yBAEzG,qEAA2C,iBAAMA,UAAU,0BAAyB,4BAEpF,8DAAoC,iBAAMA,UAAU,0BAAyB,0BAK9E,SAAC,KAAU,CAACG,WAAYC,EAAAA,WAK1B,UAACzB,EAAiB,CACjBqB,UAAU,uBACVK,MAAO,CAAEC,UAAWb,EAAc,OAAS,KAC3Cc,SAvDH,SAAsBC,GACrBA,EAAEC,iBAEFrB,EAAUsB,EAAwB,CAAErC,QAAAA,EAASC,QAAAA,KAE7CgB,GAAmB,EACpB,EAkDGqB,YAAU,aAEV,eAAIX,UAAU,YAAYK,MAAO,CAAEO,WAAY,OAAQ,6BAEvD,SAAC,KAAS,CACTC,KAAK,OACLC,KAAK,UACLC,MAAM,UACNC,MAAO3C,EACP4C,aAAc,gBAAGC,EAAM,EAANA,OAAM,OAAOhC,EAAWgC,EAAOF,MAAM,EACtDG,MAAa,OAAN5C,QAAM,IAANA,OAAM,EAANA,EAAQF,WAGhB,SAAC,KAAS,CACTwC,KAAK,WACLC,KAAK,UACLC,MAAM,UACNC,MAAO1C,EACP2C,aAAc,gBAAGC,EAAM,EAANA,OAAM,OAAO/B,EAAW+B,EAAOF,MAAM,EACtDG,MAAa,OAAN5C,QAAM,IAANA,OAAM,EAANA,EAAQD,WAGhB,SAAC,KAAM,CACN+B,MAAO,CAAEe,MAAO,QAChBP,KAAK,SACLQ,QAAQ,UAAS,gCAOtB,C","sources":["validation/ticket-support.validation.js","pages/dashboard/ticket-support/ticket-support.styles.js","pages/dashboard/ticket-support/ticket-support.jsx"],"sourcesContent":["function TicketSupportValidation({ subject, message }) {\r\n    const errors = {};\r\n    console.log(subject, message);\r\n\r\n    if(!subject.length) \r\n        errors.subject = \"Username can't be empty\";\r\n\r\n    if(!message.length)\r\n        errors.message = \"Message can't be empty\";\r\n    \r\n    return errors;\r\n}\r\n\r\nexport default TicketSupportValidation;","import styled from 'styled-components';\r\n\r\n\r\nexport const TicketSupportForm = styled.form`\r\n\twidth: 40%;\r\n\tmargin: 0 auto;\r\n\tgap: .6rem;\r\n\r\n\th5 {\r\n\t\tmargin-bottom: .9rem;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t@media (max-width: 1200px) {\r\n\t\twidth: 50%;\r\n\t\tgap: .8rem;\r\n\t}\r\n\r\n\t@media (max-width: 1100px) {\r\n\t\twidth: 55%;\r\n\t\tmargin-top: 1rem;\r\n\t}\r\n\r\n\t@media (max-width: 900px) {\r\n\t\twidth: 65%;\r\n\t}\r\n\r\n\t@media (max-width: 800px) {\r\n\t\twidth: 70%;\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\twidth: 55%;\r\n\t}\r\n\r\n\t@media (max-width: 600px) {\r\n\t\twidth: 70%;\r\n\t}\r\n\r\n\t@media (max-width: 500px) {\r\n\t\twidth: 80%;\r\n\t}\r\n\r\n\t@media (max-width: 425px) {\r\n\t\twidth: 85%;\r\n\t}\r\n\r\n\t@media (max-width: 375px) {\r\n\t\twidth: 90%;\r\n\t}\r\n\r\n\t@media (max-width: 320px) {\r\n\t\twidth: 95%;\r\n\t}\r\n`;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from '../../../providers/auth-provider/auth-provider';\r\nimport TicketSupportValidation from '../../../validation/ticket-support.validation';\r\nimport { ticketSupportNote } from '../../../constants/dashboard';\r\nimport { Alert, NoticeBox, NoticeNote, Modal, FormInput, Button } from '../../../components';\r\nimport { TicketSupportForm } from './ticket-support.styles';\r\n\r\nfunction TicketSupport() {\r\n\tconst { currentUser: { id }} = useContext(AuthContext);\r\n\tconst [subject, setSubject] = useState(\"\");\r\n\tconst [message, setMessage] = useState(\"\");\r\n\tconst [errors, setErrors] = useState({});\r\n\tconst [formIsSubmitted, setFormIsSubmitted] = useState(false);\r\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\r\n\tconst [alertIsOpen, setAlertIsOpen] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\t// Display Modal onLoad\r\n\t\tsetIsModalOpen(true);\r\n\r\n\t\t// Display Alert\r\n\t\tsetAlertIsOpen(true)\r\n\r\n\t\treturn () => {\r\n\t\t\tsetIsModalOpen(false);\r\n\t\t\tsetAlertIsOpen(false);\r\n\t\t}\r\n\t}, [setIsModalOpen, setAlertIsOpen]);\r\n\r\n\r\n\tfunction submitTicket(e) {\r\n\t\te.preventDefault();\r\n\r\n\t\tsetErrors(TicketSupportValidation({ subject, message }));\r\n\r\n\t\tsetFormIsSubmitted(true);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(Object.keys(errors).length === 0 && formIsSubmitted) {\r\n\t\t\tconsole.log(subject, message, id)\r\n\t\t}\r\n\t}, [errors, formIsSubmitted, subject, message, id])\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{/* Alert */}\r\n\t\t\t{ alertIsOpen ? \r\n\t\t\t\t<Alert  \r\n\t\t\t\t\tisOpen={alertIsOpen} \r\n\t\t\t\t\tsetIsOpen={setAlertIsOpen}\r\n\t\t\t\t>\r\n\t\t\t\t\tAny misbehaviour with our customer support will cause your account to be limited and/or potentially suspended <span className=\"font-bold\">Notice to all users: </span> \r\n\t\t\t</Alert> : null }\r\n\r\n\t\t\t{/* Modal */}\r\n\t\t\t<Modal\r\n\t\t\t\tisOpen={isModalOpen}\r\n\t\t\t\tcloseModal={() => setIsModalOpen(prevState => !prevState)}\r\n\t\t\t>\r\n\t\t\t\t<NoticeBox>\r\n\t\t\t\t\t{/* List */}\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>For Problems with Orders, use subject <span className=\"font-bold gradient-text\">Order</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>For Problems with Payments, use subject <span className=\"font-bold gradient-text\">Payment</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>If you need any Payment method/Service/Feature, use subject <span className=\"font-bold gradient-text\">Request</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>If any bug in the website, use subject <span className=\"font-bold gradient-text\">Bug Report</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>For any thing else, use subject <span className=\"font-bold gradient-text\">Other</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t{/* Notice Note Container */}\r\n\t\t\t\t\t<NoticeNote noticeText={ticketSupportNote} />\r\n\t\t\t\t</NoticeBox>\t\t\r\n\t\t\t</Modal>\r\n\t\t\t\r\n\t\t\t{/* Ticket support form */}\r\n\t\t\t<TicketSupportForm \r\n\t\t\t\tclassName=\"d-flex d-flex-column\"\r\n\t\t\t\tstyle={{ marginTop: alertIsOpen ? '4rem' : '0' }}\r\n\t\t\t\tonSubmit={submitTicket}\r\n\t\t\t\tnoValidate\r\n\t\t\t>\r\n\t\t\t\t<h5 className=\"heading-5\" style={{ fontWeight: '400' }}>Ticket Support</h5>\r\n\r\n\t\t\t\t<FormInput \r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"subject\"\r\n\t\t\t\t\tlabel=\"subject\"\r\n\t\t\t\t\tvalue={subject}\r\n\t\t\t\t\thandleChange={({ target }) => setSubject(target.value)}\r\n\t\t\t\t\terror={errors?.subject}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<FormInput \r\n\t\t\t\t\ttype=\"textarea\"\r\n\t\t\t\t\tname=\"message\"\r\n\t\t\t\t\tlabel=\"Message\"\r\n\t\t\t\t\tvalue={message}\r\n\t\t\t\t\thandleChange={({ target }) => setMessage(target.value)}\r\n\t\t\t\t\terror={errors?.message}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Button \r\n\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\ttype=\"submit\" \r\n\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t>\r\n\t\t\t\t\tSubmit ticket\r\n\t\t\t\t</Button>\r\n\t\t\t</TicketSupportForm>\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default TicketSupport"],"names":["subject","message","errors","console","log","length","TicketSupportForm","styled","id","useContext","AuthContext","currentUser","useState","setSubject","setMessage","setErrors","formIsSubmitted","setFormIsSubmitted","isModalOpen","setIsModalOpen","alertIsOpen","setAlertIsOpen","useEffect","Object","keys","isOpen","setIsOpen","className","closeModal","prevState","noticeText","ticketSupportNote","style","marginTop","onSubmit","e","preventDefault","TicketSupportValidation","noValidate","fontWeight","type","name","label","value","handleChange","target","error","width","variant"],"sourceRoot":""}